name: Main
on:
  push:
    branches:
      - main
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v4

      - name: ⬢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '*'
          cache: npm

      - name: 📦 Install Packages
        run: npm ci

      - name: 🧪 Test
        run: npm test




  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.ref_name == 'main' && (github.event_name == 'push' || github.event.pull_request.merged)
    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v4

      - name: ⬢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '*'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install Packages
        run: npm ci

      - name: 🏗 Build
        run: npm run build

      - name: 🚀 Release
        run: npm publish --access public
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/lawn-mower-card.js
          asset_name: lawn-mower-card.js

  dependabot:
    name: Dependabot Auto-merge
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
      - name: 💿 Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: ↔️ Enable Auto-merge for minor and patch Dependabot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        if: steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch'
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
