name: Release

on:
  push:
    paths:
      - 'package.json'
    branches:
      - main
    tags: [ 'v*.*.*' ]
  workflow_dispatch:


permissions:
  contents: write
  pull-requests: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    uses: ./.github/workflows/test.yml

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v4

      - name: ⬢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '*'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install Packages
        run: npm ci

      - name: Run build and get version
        id: build
        run: |
          OUTPUT=$(npm run build) 
          VERSION=$(echo $OUTPUT | grep -oP 'lawn-mower-card@\K[^ ]+') 
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV 
          echo "$VERSION"

#      - name: 🚀 Release
#        run: npm publish --access public
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create Release
        run: |
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          gh release create v${{ env.PACKAGE_VERSION }} \
            --repo="${GITHUB_REPOSITORY}" \
            --title="${{ env.PACKAGE_VERSION }}" \
            --notes="Release notes for v${{ env.PACKAGE_VERSION }}" \
            --draft
        env:
          #GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Release Asset
        run: |
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          gh release upload v${{ env.PACKAGE_VERSION }} ./dist/lawn-mower-card.js
        env:
          #GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Source Code as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/lawn-mower-card.js
          asset_name: lawn-mower-card.js
          asset_content_type: application/javascript
          
          
